@model IList<BWR.Application.Dtos.Branch.BranchCashDto>
@{
    var coins = Model.Where(x => !x.IsMainCoin).Select(x => x.Coin);

    var mainCoinName = "";
    var mainCoinId = 0;
    var branchCashForMainCoin = Model.FirstOrDefault(x => x.IsMainCoin);
    if (branchCashForMainCoin != null)
    {
        mainCoinName = branchCashForMainCoin.Coin.Name;
        mainCoinId = branchCashForMainCoin.Coin.Id.Value;
    }
}

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_BlankPageLayout.cshtml";
}
<br />
<div class="portlet box blue">
    <div class="portlet-title">
        <h4><i class="fa fa-exchange"> </i>   <b>الصيرفة</b></h4>
    </div>
    <div class="portlet-body">
        <div class="portlet-form">
            <div class="row">

                <div class="col-lg-4 col-md-4">
                    <div class="form-group">
                        <label for="typeOfPay">نوع الدفع</label>
                        <select id="typeOfPay" class="form-control">
                            @*<option value="0" index="0"></option>*@
                            <option value="1">نقدي</option>
                            <option value="2">ذمم عملاء</option>
                            <option value="3">ذمم شركات</option>
                        </select>
                    </div>

                </div>

                <div class="col-lg-4 col-md-4">
                    <div class="form-group">
                        <label for="actionType">نوع الحركة</label>
                        <select id="actionType" class="form-control">
                            <option index="0"></option>
                            <option value="1">بيع</option>
                            <option value="2">شراء</option>

                        </select>
                    </div>
                </div>

                <div class="col-lg-4 col-md-4">
                    <div class="form-group">
                        <label for="date">التاريخ</label>
                        <input type="date" id="date" class="form-control" />
                    </div>

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-4 col-md-4">
                <div class="form-group">
                    <label for="coin">العملة</label>

                    <select id="coin" class="form-control">
                        <option index="0"></option>
                        @foreach (var coin in coins)
                        {
                            <option value="@coin.Id">@coin.Name</option>
                        }
                    </select>

                </div>
            </div>
            <div class="col-lg-4 col-md-4">
                <div class="form-group">
                    <label for="exchangePrice">سعر الصرف :</label>
                    <input type="number" id="exchangePrice" class="form-control" />
                </div>

            </div>
            <div class="col-lg-4 col-md-4">
                <label></label>
                <div class="alert alert-info">
                    <strong>سعر الصرف الاساسي :</strong>  <a id="mainExchangePrice" class="alert-link">0.0</a>
                </div>
            </div>
        </div>

        <div class="row" id="agentOrCompanyDiv" style="display:none;">
            <div class="col-lg-4 col-md-4">
                <div class="form-group" id="agentDiv" style="display:none">
                    <label for="agent">العميل</label>
                    @Html.DropDownList("Agents", null, "", htmlAttributes: new { @class = "form-control", id = "agent" })
                </div>
                <div class="form-group" id="companyDiv" style="display:none">
                    <label for="comapny">الشركة</label>
                    @Html.DropDownList("Companies", null, "", htmlAttributes: new { @class = "form-control", id = "company" })
                </div>
            </div>
            <div class="col-lg-4 col-md-4">

                <label></label>
                <div class="alert alert-info">
                    <div class="row">
                        <div class="col-lg-6 col-md-6">
                            <strong id="currentBalanceLabel">الرصيد الحالي :</strong>  <a id="currentBalance" class="alert-link">0.0</a>
                        </div>
                        <div class="col-lg-6 col-md-6">
                            <strong id="currentBalanceMainLabel">الرصيد الحالي @mainCoinName :</strong>  <a id="currentBalanceMain" class="alert-link">0.0</a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-4">

                <label></label>
                <div class="alert alert-info">
                    <div class="row">
                        <div class="col-lg-6 col-md-6">
                            <strong id="newBalanceLabel">الرصيد الجديد :</strong>  <a id="newBalance" class="alert-link">0.0</a>
                        </div>
                        <div class="col-lg-6 col-md-6">
                            <strong id="newBalanceMainLabel">الرصيد الجديد @mainCoinName :</strong>  <a id="newBalanceMain" class="alert-link">0.0</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-4 col-md-4">
                <div class="form-group">
                    <label for="amount" id="amountLabel">المبلغ</label>
                    <input type="number" id="amount" class="form-control" autocomplete="off" />
                </div>
            </div>
            <div class="col-lg-4 col-md-4">
                <div class="form-group">
                    <label for="amountForMainCoin">المبلغ @mainCoinName</label>
                    <input type="number" id="amountForMainCoin" class="form-control" disabled="disabled" />
                </div>

            </div>
            <div class="col-lg-4 col-md-4">
                <div class="form-group">
                    <label for="note">ملاحظات</label>
                    <textarea id="note" class="form-control"></textarea>
                </div>
            </div>
        </div>

    </div>
    <div class="panel-footer">
        <div class="row">
            <div class="col-lg-12 col-md-12">
                <button class="btn btn-success" id="exchangeBtn"><i class="fa fa-save"></i>  حفظ</button>
            </div>
            <div class="col-lg-12 col-md-12" style="margin-top:10px;">
                <div class="alert alert-danger" id="validationMassagesDiv" style="display:none;">
                    <div class="row">
                        <ul id="validationMassagesUl">
                        </ul>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<style>
    label {
        font-weight: bold;
    }
</style>




<script>
    var _branchCashs = @Html.Raw(Json.Encode(Model));
    var _oldBalance = 0;
    var _oldMainBalance = 0;
    //seletors
    var $coin = $('#coin');
    var $agent = $('#agent');
    var $typeOfPay = $('#typeOfPay');
    var $actionType = $('#actionType');
    var $company = $('#company');
    var $amount = $('#amount');
    var $date = $('#date');
    var $note = $('#note');
    var $amountForMainCoin = $('#amountForMainCoin');

    $(function () {

        $date.val(getCurrentDateForDatepicker());

        $coin.change(function () {
            handleChangeCoin();
        });

        $agent.change(function () {
            handleChanges();
        });

        $company.change(function () {
            handleChanges();
        });

        $typeOfPay.change(function () {
            if ($typeOfPay.val() == 1) {
                $('#agentOrCompanyDiv').css('display', 'none');
                $('#agentDiv').css('display', 'none');
                $('#companyDiv').css('display', 'none');
            } else if ($typeOfPay.val() == 2) {
                $('#agentOrCompanyDiv').css('display', 'block');
                $('#agentDiv').css('display', 'block');
                $('#companyDiv').css('display', 'none');
            } else if ($typeOfPay.val() == 3) {
                $('#agentOrCompanyDiv').css('display', 'block');
                $('#agentDiv').css('display', 'none');
                $('#companyDiv').css('display', 'block');
            }

            handleChanges();
        });

        $actionType.change(function () {
            handleChanges();
        });

        $amount.keyup(function () {
            onChangeAmount();
        });

        $('#exchangeBtn').on('click', function () {
            if (!checkValidationError()) {

                var url = '';
                var input = {
                    'Date': $date.val(),
                    'FirstCoinId': $coin.val(),
                    'SecondCoinId': '@mainCoinId',
                    'AgentId': null,
                    'CompanyId':null,
                    'TypeOfPay': $typeOfPay.val(),
                    'ActionType': $actionType.val(),
                    'AmountOfFirstCoin': $amount.val(),
                    'AmoutOfSecondCoin': $amountForMainCoin.val(),
                    'Note': $note.val()
                };
                if ($typeOfPay.val() == 1) {
                    url = '@Url.Action("ExchangeForBranch", "Exchange")';
                    exchangeAmount(url, input);
                } else if ($typeOfPay.val() == 2) {
                    url = '@Url.Action("ExchangeForClient", "Exchange")';
                    input['AgentId'] = $agent.val();
                    exchangeAmount(url, input);
                } else if ($typeOfPay.val() == 3) {
                    url = '@Url.Action("ExchangeForCompany", "Exchange")';
                    input['CompanyId'] = $company.val();
                    exchangeAmount(url, input);
                }
            }
        });

    });

    function exchangeAmount(url, input) {
        $.post(url, {
            input: input
        }, function (output) {
                if (output) {
                    toastr["success"]("تم الحفظ بنجاح", "");
                } else {
                    toastr["error"]("حدث خطأ اثناء الحفظ", "");
                }
        });

    }

    function handleChangeCoin(e) {
        var coinName = $coin.text();
        $('#currentBalanceLabel').text('');
        $('#currentBalanceLabel').text('الرصيد الحالي ' + coinName + ' :');
        $('#newBalanceLabel').text('');
        $('#newBalanceLabel').text('الرصيد الجديد ' + coinName + ' :');

        $('#amountLabel').text('');
        $('#amountLabel').text('المبلغ ' + coinName);

        handleChanges();

    }

    function handleChanges() {
        var agentId = $agent.val();
        var coinId = $coin.val();
        var companyId = $company.val();

        if ($typeOfPay.val() == 2 && !isNullOrEmpty(agentId) && !isNullOrEmpty(coinId)) {
            getBalanceForClient()
        } else if ($typeOfPay.val() == 3 && !isNullOrEmpty(companyId) && !isNullOrEmpty(coinId)) {
            getBalanceForCompany()
        }

        var actionType = $actionType.val();
        if (!isNullOrEmpty(actionType) && !isNullOrEmpty(coinId)) {
            getExchangeInfo(actionType, coinId);

        }

        $('#amount').val('');
    }

    function getExchangeInfo(actionType, coinId) {
        $.each(_branchCashs, function (key, row) {
            if (row.Coin.Id == coinId) {
                $('#mainExchangePrice').text(row.ExchangePrice);
                if (actionType == 1) {
                    $('#exchangePrice').val(row.SellingPrice);
                } else {
                    $('#exchangePrice').val(row.PurchasingPrice);
                }
            }
        });

    }

    function getBalanceForClient() {
         $.post(
                '@Url.Action("GetBalanceForClient", "ClientCashFlow")', {
                     clientId: $agent.val(),
                     coinId: $coin.val()

                }, function (data) {
                     $.each(data, function (key, row) {
                         if (row.IsMainCoin) {
                             _oldMainBalance = row.Balance;
                             var balance = row.Balance > 0 ? ('له/' + row.Balance) : ('عليه/' + Math.abs(row.Balance));
                             $('#currentBalanceMain').text(balance);
                             $('#newBalanceMain').text(balance);
                         } else {
                             _oldBalance = row.Balance;
                             var balance = row.Balance > 0 ? ('له/' + row.Balance) : ('عليه/' + Math.abs(row.Balance));
                             $('#currentBalance').text(balance);
                             $('#newBalance').text(balance);
                         }
                     });
                }
            )
    }

    function getBalanceForCompany() {
        $.post(
                '@Url.Action("GetBalanceForCompany", "CompanyCashFlow")', {
                companyId: $company.val(),
                coinId: $coin.val()

                }, function (data) {
                     $.each(data, function (key, row) {
                         if (row.IsMainCoin) {
                             _oldMainBalance = row.Balance;
                             var balance = row.Balance > 0 ? ('له/' + row.Balance) : ('عليه/' + Math.abs(row.Balance));
                             $('#currentBalanceMain').text(balance);
                             $('#newBalanceMain').text(balance);
                         } else {
                             _oldBalance = row.Balance;
                             var balance = row.Balance > 0 ? ('له/' + row.Balance) : ('عليه/' + Math.abs(row.Balance));
                             $('#currentBalance').text(balance);
                             $('#newBalance').text(balance);
                         }
                     });
                }
            )
    }

    function isNullOrEmpty(value) {
        return (value == null || value == "");
    }

    function onChangeAmount() {
        debugger;
        var amount = $amount.val();
        var exchangePrice = $('#exchangePrice').val();
        var amountForMainCoin = getRealAmount(amount * exchangePrice);
        $amountForMainCoin.val(amountForMainCoin);

        //Main coin
        var newMainBalance = $actionType.val() == 1 ? parseFloat(_oldMainBalance) + parseFloat(amountForMainCoin) : parseFloat(_oldMainBalance) - parseFloat(amountForMainCoin);
        var mainBalance = newMainBalance > 0 ? ('له/' + newMainBalance) : ('عليه/' + Math.abs(newMainBalance));
        $('#newBalanceMain').text(mainBalance);

        //Selected coin
        var newBalance = $actionType.val() == 1 ? parseFloat(_oldBalance) - parseFloat(amount) : parseFloat(_oldBalance) + parseFloat(amount);
        var balance = newBalance > 0 ? ('له/' + newBalance) : ('عليه/' + Math.abs(newBalance));
        $('#newBalance').text(balance);

    }

    function getRealAmount(amount) {
        var value = amount.toString().slice(-2);
        if (value < 50) {
            amount = amount - value + 50;
        } else if (value > 50) {
            amount = amount - value + 100;
        }

        return amount;
    }

    function checkValidationError() {
        $('#validationMassagesUl').html('');
        var valid = false;

        if (isNullOrEmpty($actionType.val())) {
            valid = true;
            $('#validationMassagesUl').append('<li>نوع الحركة مطلوبة</li>');
        }
        if (isNullOrEmpty($coin.val())) {
            valid = true;
            $('#validationMassagesUl').append('<li>العملة مطلوبة</li>');
        }
        if (isNullOrEmpty($('#exchangePrice').val())) {
            valid = true;
            $('#validationMassagesUl').append('<li>سعر الصرف مطلوب</li>');
        }
        if ($typeOfPay.val() == 2 && isNullOrEmpty($agent.val())) {
            valid = true;
            $('#validationMassagesUl').append('<li>العميل مطلوب</li>');

        }
        if ($typeOfPay.val() == 3 && isNullOrEmpty($company.val())) {
            valid = true;
            $('#validationMassagesUl').append('<li>الشركة مطلوب</li>');
        }
        if (isNullOrEmpty($date.val())) {
            valid = true;
            $('#validationMassagesUl').append('<li>التاريخ مطلوبة</li>');
        }
        if (isNullOrEmpty($('#amount').val())) {
            valid = true;
            $('#validationMassagesUl').append('<li>المبلغ مطلوبة</li>');
        }

        if (valid) {
            $('#validationMassagesDiv').css('display', 'block');
        } else {
            $('#validationMassagesDiv').css('display', 'none');
        }
        return valid;
    }

</script>

