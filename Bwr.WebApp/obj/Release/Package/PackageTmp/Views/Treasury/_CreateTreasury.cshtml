
@using BWR.Application.Dtos.Treasury

@model BWR.Application.Dtos.Treasury.TreasuryInsertDto
@{
    /**/

    Layout = null;
}

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title">إضافة صندوق</h4>
        </div>
        @using (Ajax.BeginForm("Create", "Treasury", null, new AjaxOptions { HttpMethod = "Post" }, new { @class = "form-horizontal", role = "form", id = "addTreasuryForm" }))
        {
            <div class="modal-body ">
                <div class="col-lg-12 col-md-12">
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item active">
                            <a class="nav-link active" id="treasury-tab" data-toggle="tab" href="#addTreasurySection" role="tab">بيانات الصندوق</a>
                        </li>
                        @*<li class="nav-item">
                                <a class="nav-link" id="provinces-tab" data-toggle="tab" href="#addCoinSection" role="tab">إضافة رصيد</a>
                            </li>*@
                    </ul>
                </div>

                <div class="col-lg-12 col-md-12">
                    <div class="tab-content">
                        <div class="tab-pane active" id="addTreasurySection">
                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    <label class="control-label col-md-3" for="Name">اسم الصندوق <span class="text-danger">*</span></label>
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", id = "a-treasury-name" } })

                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <input hidden value="" />
                            </div>
                            <hr />
                            <div class="form-horizontal">
                                <h2>العملات</h2>
                                <div class="row">
                                    <div class="col-lg-12">
                                        <select id="coinSelect" class="form-control">
                                            <option value="">---الرجاء الإختيار---</option>
                                        </select>
                                    </div>
                                </div>
                                <br />
                                <div  id="selectedCoin"></div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button id="btnAddTreasury" type="button" class="btn btn-primary">حفظ <span class="glyphicon glyphicon-save"></span></button>
                        <button type="button" class="btn btn-sm btn-default" onclick="resetTreasuryContainer()" data-dismiss="modal">إغلاق <span class="glyphicon glyphicon-remove"></span></button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>

    $(function () {

        initialCoins();

        var $form = $("#addTreasuryForm");
        $.validator.unobtrusive.parse($form);
        //.is(':empty')
        $('#btnAddTreasury').on("click", function (event) {
            if ($form.valid()) {
                debugger;
                if ($('#selectedCoin').is(':empty')) {
                    alert("يجب عليك إضافة عملة على الأقل");
                    return;
                }
                var dto = {
                    Name: $('#a-treasury-name').val(),
                    TreasuryCashes: getCoins()
                };
                console.log(dto);
                $.ajax({
                    url: '@Url.Action("Create", "Treasury")',
                    type: 'POST',
                    data: dto,
                    dataType: "json",
                    cache: false,
                    success: function (data) {

                        if (data.Success == true) {
                            resetTreasuryContainer();

                            $treasuryDataTable.refresh();
                            toastr.success('تم الحفظ بنجاح')
                        }
                        else {
                            if (data.Exist == true) {
                                $('[data-valmsg-for="Name"]').html("");
                                $('[data-valmsg-for="Name"]').html(data.Message);
                            }
                            toastr.error(data.Message);
                        }

                    },
                    error: function () { toastr.error("خدث خطأ ما أثناء الإضافة"); }
                });

            }


        });

    });


    function getCoins() {

        let treasuryCoins = [];
        let selectedCoin = document.getElementById('selectedCoin');
        let rows = selectedCoin.getElementsByClassName('row');
        for (var i = 0; i < rows.length; i++) {
            let row = rows[i];
            let id = row.getElementsByTagName('input')[0].value;
            let amount = row.getElementsByTagName('input')[1].value;
            amount = deleteCommaFromNumber(amount);
            treasuryCoins.push({ 'InitialBalance': amount, 'Total': amount, 'CoinId': id });
        }

        return treasuryCoins;
    }


    function initialCoins() {
        $.get('@Url.Action("GetCoinsForDropdown","Coin")', { term: "" }, function (data) {

            var coins = data.Coins;
            for (var i = 0; i < coins.length; i++) {
                console.log(coins[i]);
                var option = new Option(coins[i].Name + "  " + coins[i].Code, coins[i].Id);
                $('#coinSelect').append(option);
            }

        });
    }
    $('#coinSelect').change(function (){

        //<input type="text"
        //    class="form-control"
        //    name="amount"
        //    onkeypress="validation(this, event);"
        //    onkeyup="FormaittingNumber(this); clacComission(this);"
        //    onkeydown="PriventEmptytext(this, event)"
        //    value="0"
        //    onfocusout="validateRowAfterAnyEvent(this)">
        let selectedCountry = $('#coinSelect').children("option:selected");
        let elm = `<div class="row">
                                        <div class="col-lg-2">
                                            <label name="name">`+ selectedCountry.text() +`</label>
                                        </div>
                                        <div class="col-lg-6">
                                            <input hidden value="`+ selectedCountry.val() +`" name="Id"/>
                                            <input type="text" class="form-control"onkeypress="validation(this, event);"
            onkeyup="FormaittingNumber(this); clacComission(this);"
            onkeydown="PriventEmptytext(this, event)"
            value="0" />
                                        </div>
                                        <div class="col-lg-2">
                                        <button onclick='deleteCoin(this)'><span class="glyphicon glyphicon-trash"></span></button>
                                        </div>
                                    </div>`
        $('#selectedCoin').append(elm);
        $('#coinSelect option:selected').remove();

    });
    function deleteCoin(element) {
        document.getElementsByName
        var parent = element.parentElement.parentElement;
        console.log(parent);
        var name = parent.getElementsByTagName('label')[0].textContent;
        var Id = parent.getElementsByTagName('input')[0].value;
        var option = new Option(name,Id);
        $('#coinSelect').append(option);
        parent.remove();
    }
    function resetTreasuryContainer() {

        $('#createTreasuryModal').modal('hide');
        $('#createTreasuryContainer').html('');
    }


</script>